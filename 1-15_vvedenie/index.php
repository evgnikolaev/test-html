<?/*

-----------------------------------   1) Введение   --------------------------------------------

<abbr title="...">CGI</abbr>   - абревиатура
<em>Текст</em>  					- курсив (логическое выделение текста)

CSS
p  a   - потомок
p > a  - дочерний
p + a  - сосед

font-family : Arial, "Times New Roman", serif;          - сперва ищет в системе сперва Arial, потом "Times New Roman" , потом serif
															семейства serif - шрифт с засечками
																	 sans-serif - шрифт без засечками
																	 monospace - моноширинный шрифт

font-size : 1.5em;					1e.m - если не указать, это примерно 16px,  1,5em - примерно 150%.

!!! не нужно смешивать элементы разметки с оформлением
!!! расставляем em и strong - там где это нужно. в других местах оформление задаем при помощи css (например жирность)

Цитаты:
blockuote - блочная цитата
q 		  - строчная цитата


-----------------------------------   2) Блочная модель   --------------------------------------------

Блочная модель
http://joxi.ru/Q2Kvbk4HvgbVPm

!!!  Высота и ширина задается для контентной области
!!!  Физические размеры будут складываться из content + padding + border ( margin - внешняя , не влияеет )

!!!  Схлопывание margin - по вертикали, больший margin поглощает меньший.


box-sizing : content-box - высота и ширина по content
		     border-box - по border
			 padding-box - по paddinf


-----------------------------------   3) background   --------------------------------------------

background
Задаем когда это элемент дизайна (на загружаемая на контенте)

!!!  Последовательность должна быть такой background-image, background-color (потому что пока картинка не загрузилась, будет показываться цвет).

background-clip : border-box - картика может задезать на border
				  padding-box - картинка может залезать на padding
				  content-box  - картинка только в облости content



-----------------------------------   4) Каскад и специфичность   --------------------------------------------

Каскад и специфичность

Сперва работает специфичность потом каскадирование (сверху вниз).
Специфичность:
1000 - Встроенный локальный стиль
0100 - именной селектор
0010 - классовый селектор
0001 - теговый селектор


-----------------------------------   4) Display float   --------------------------------------------

Display float

Поток - порядок рендеринга элемента.
display - устанавливает  поведение элемента.

float - выдерни из потока.

!!! При удалении родителя из потока, родитель не выделяет место под этот элемент.
!!! Это называется сзлопывание родителя.


!!! Чтобы отменить обтекание (схлопывание) нужно использоватть clear:both.
!!! Применяется к элменту, указанному после обтекаемых элементов.
<div>
	<div class="float-left"></div>
	<div class="float-right"></div>
	<div class="clear-both"></div>
</div>

-----------------------------------   7) Списки   --------------------------------------------

списки - все блочные(ul, ol, li)
ul - маркированный
ol - нумерованный
li - внути не желательно p и заголовки
	 Блочный, display: list-item, благодаря этому выводятся маркеры или цифры.
	Но они выводятся на месте padding у ul(ol).

css только для стилей
 list-style-position  - (inside/outside) маркеры принадлежат к ul или li
 list-style-type
 list-style-image


-----------------------------------   8) Таблицы   --------------------------------------------

 !! пркатически любые css не применятся к tr.
    Исключения (наследуемые свойства шрифтов например )

 table{
    border-collapse - прижать ячейки длруг к другу или нет.
    border-spacing  - расстояние между ячейками. значения задаем как для  margin.
 }


 rowspan - объединение строк
 colspan - объединение колонок


-----------------------------------   9-10) Псевдоэлементы и псевдоклассы  --------------------------------------------

Псевдоэлементы - позволяют работать при помощи css с элементами, которые мы не задавали в html коде.
	:before (вставится строчный элемент вначало, обязательно content)
	:after (вставится строчный элемент вконец, обязательно content)
	:first-letter
	:first-line

Псевдокласс - на определенное событие добавляется псевдокласс. Группы:
	1) определяющие состояние элемента
		:active (нажали - active, отпустили кнопку мыши - active пропал, редко)
		:hover
		:link
		:visited
		:focus
	2) имеющие отношение к дереву элементов
		:last-child
		:first-child
		:nth-child()
	3) указывающие язык текста (очень редко, атриюут lang у html)



-----------------------------------   9-10) Семантический веб и метатеги  --------------------------------------------

для логики структуры, для поисковиков.


Кросбраузерность - одинаково во всез браузерах.
Семантика - теги по предназначение.
Мета -теги - инфо для брузера, поисковых машин. 2 основные группы:
NAME - инфо о странице, для браузера, поисковых машин.
HTTP-EQUIV- формирует заголовок страницы и определяет ешо обработку.


header/footer - шапка, подвал логического раздела!! (не страницы, но может быть и у body)
nav - основная навигация
section  - группировка разделов

!!! article - некий автономный контент, который может испольщоваться независимо от страницы.
			(новость, статья, запись в блоге) / Мысль закончена - это article.
!!! aside - как сайдбар(боковая панель) (хранит информацию с существующим контентом) При этом основной контент пожет жить и без нее!!!
!!! main  - для группировке уникального контента по всему сайту!! все что внутри main не должно повторяться по всему сайту!!!
		помещается только в body/    у body  и  у main равнозначные по уровню заголовки.


time - для роботов - инфо о времени (указать атрибут datetime)
mark - выделфем важное слово.
wbr - разрыв длинной строки
address - адрес(автор, ссылка на сайт. для веса страницы, чтобы не понижать в поисковой выдаче)

!!!!!Если header содержит только h1 не нужно оборачивать его в header.
Семанитческие теги применяем к контенту.
!!! Используем только тогда, когда нужно. Для декоративных целей используем div.


html5 outliner - для проверки логической  структуры
https://gsnedders.html5.org/outliner/






*/?>
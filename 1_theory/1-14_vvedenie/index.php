<?/*

-----------------------------------   1) Введение   --------------------------------------------

<abbr title="...">CGI</abbr>   - абревиатура
<em>Текст</em>  					- курсив (логическое выделение текста)

CSS
p  a   - потомок
p > a  - дочерний
p + a  - сосед

font-family : Arial, "Times New Roman", serif;          - сперва ищет в системе сперва Arial, потом "Times New Roman" , потом serif
															семейства serif - шрифт с засечками
																	 sans-serif - шрифт без засечками
																	 monospace - моноширинный шрифт

font-size : 1.5em;					1e.m - если не указать, это примерно 16px,  1,5em - примерно 150%.

!!! не нужно смешивать элементы разметки с оформлением
!!! расставляем em и strong - там где это нужно. в других местах оформление задаем при помощи css (например жирность)

Цитаты:
blockuote - блочная цитата
q 		  - строчная цитата


-----------------------------------   2) Блочная модель   --------------------------------------------

Блочная модель
http://joxi.ru/Q2Kvbk4HvgbVPm

!!!  Высота и ширина задается для контентной области
!!!  Физические размеры будут складываться из content + padding + border ( margin - внешняя , не влияеет )

!!!  Схлопывание margin - по вертикали, больший margin поглощает меньший.


box-sizing : content-box - высота и ширина по content
		     border-box - по border
			 padding-box - по padding


-----------------------------------   3) background   --------------------------------------------

background
Задаем когда это элемент дизайна (на загружаемая на контенте)


background-color:   transparent;
					#18b5a4;
					rgb(24,181,164);        http://hex2rgba.devoth.com/
                    rgba(24,181,164,0.5);


background-image:   url('../img/avatar.jpg');
					linear-gradient( ... );    https://www.colorzilla.com/gradient-editor/
					radial-gradient( ... );


background-repeat:  repeat;     - по умолчанию
					no-repeat;
					repeat-x;
					repeat-y;
					space;      -  заполняет полностью, и создает отступы между картинками - правктически не используются
					round;      -  заполняет полностью,  растягивает, сужает картинки, чтобы влезли - правктически не используются


background-position:    0 0;       - в пискселях
						20px 30px; - в пискселях
						0 50%;     - в процентах
						center left bottom right ;     - словами


background-attachment:   fixed; -  будет ли прокручиваться фоновое изображение относительно всей страницы (не блока)
						 local - появляется скролл на самом блоке  - практически не используется



background-size:  auto auto:  - маштабирует фоновое изображение согласно заданным размерам
				  100% auto;  - по ширине (растянуть)
				  auto 100%;  - по высоте (растянуть)
				  100% 100%;  - растянуть непропорционально
				  300px 100%;  - растянуть непропорционально
				  contain;      - маштабирует с сохранением пропорций, чтобы картинка целиком поместилась в блок (маштабирует по меньшей стороне)
				  cover;        - маштабирует с сохранением пропорций, чтобы его ширина и высота равнялась ширине и высоте блока (маштабирует по большей стороне)


Установка нескольких фоновых изображений через запятую, и каждая послеюующая ложится под предыдущую.

background: background-image
			background-position  "/" background-size
			background-repeat
			background-attachment


background: url('img/background/bg.jpg') 0 0/auto auto no-repeat;




!!!  Последовательность должна быть такой background-image, background-color (потому что пока картинка не загрузилась, будет показываться цвет).

background-clip : border-box - картика может залезать на border
				  padding-box - картинка может залезать на padding
				  content-box  - картинка только в облости content


-----------------------------------   4) Каскад и специфичность   --------------------------------------------

Каскад и специфичность

Сперва работает специфичность потом каскадирование (сверху вниз).
Специфичность:
1000 - Встроенный локальный стиль
0100 - именной селектор
0010 - классовый селектор
0001 - теговый селектор


-----------------------------------   4) Display float   --------------------------------------------

Display float

Поток - порядок рендеринга элемента.
display - устанавливает  поведение элемента.

float - выдерни из потока.

!!! При удалении родителя из потока, родитель не выделяет место под этот элемент.
!!! Это называется сзлопывание родителя.


!!! Чтобы отменить обтекание (схлопывание) нужно использоватть clear:both.
!!! Применяется к элемнту, указанному после обтекаемых элементов.
<div>
	<div class="float-left"></div>
	<div class="float-right"></div>
	<div class="clear-both"></div>
</div>

-----------------------------------   7) Списки   --------------------------------------------

списки - все блочные(ul, ol, li)
ul - маркированный
ol - нумерованный
li - внути не желательно p и заголовки
	 Блочный, display: list-item, благодаря этому выводятся маркеры или цифры.
	Но они выводятся на месте padding у ul(ol).

css только для списков (ul, ol)
 list-style-position  - (inside/outside) маркеры принадлежат к ul или li
 list-style-type
 list-style-image


-----------------------------------   8) Таблицы   --------------------------------------------

 !! пркатически любые css не применятся к tr.
    Исключения (наследуемые свойства шрифтов например )

 table{
    border-collapse - прижать ячейки длруг к другу или нет.
    border-spacing  - расстояние между ячейками. значения задаем как для  margin.
 }


 rowspan - объединение строк
 colspan - объединение колонок


-----------------------------------   9-10) Псевдоэлементы и псевдоклассы  --------------------------------------------

Псевдоэлементы - позволяют работать при помощи css с элементами, которые мы не задавали в html коде.
	:before (вставится строчный элемент вначало, обязательно content)
	:after (вставится строчный элемент вконец, обязательно content)
	:first-letter
	:first-line

Псевдокласс - на определенное событие добавляется псевдокласс. Группы:
	1) определяющие состояние элемента
		:active (нажали - active, отпустили кнопку мыши - active пропал, редко)
		:hover
		:link
		:visited
		:focus
	2) имеющие отношение к дереву элементов
		:last-child
		:first-child
		:nth-child()
	3) указывающие язык текста (очень редко, атриюут lang у html)




*/?>
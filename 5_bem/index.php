<?/*

Видос
https://www.youtube.com/watch?v=Jrjwewef_Ws&t=160s&ab_channel=%D0%9E%D1%820%D0%B4%D0%BE1



---------------

Блок -  что это? не какой! (на задаем геомтрию блока, margin и позиционирование)
	    То есть мы можем спокойно выдирвать  блок и вставлять в другое место
	    Можно вкладывать сколько угодно друг в друга

		<div class="title">
			<form class="search-form"></form>
		</div>

---------------

Элемент  -  составная часть блока (что это?), в отдельности от блока существовать не может
           Можно вкладывать сколько угодно друг в друга
           Это всегда часть блока ( это необязательная часть блока ), а не другого элемента

		 верно
		<div class="row">
			<div class="row__column">
				<div class="row__item"></div>
			</div>
		</div>

		 не верно
		<div class="row">
			<div class="row__column">
				<div class="row__column__item"></div>
			</div>
		</div>

---------------

	Блок - фрагмент кода повторяется, который на сайте встречается и в других местах.
	Элемент - когда фрагмент кода не используется самостоятельно, и который не встречается и в других местах.

		!! Важный принцип вложенности

		Не используем вложенности, БЭМ против этого, чтобы при перемещении элементов внутри блока, стили не перебивались
				.block__elem1 .block__elem2{}
		используем
				.block{}
				.block__elem1{}
				.block__elem2{}

---------------

Модификатор -   внешнеий вид состяния или поведения для блока или элемента (какой?)
			   Когда нужно выделить что-то из класса таких же
			   Самостоятельно не используется, пишем так: class="menu__item menu__item--link"

			булевый - используют, когда важно только наличие или отсутствие модификатора
				active , disabled , focused
			Ключ-значение -  используют когда важно значение модификатора
				size-lg , theme-space, theme-whinter

---------------

Микс -  использование и блоков и элементов в одном теге
		 title - блок
		 about__title - задаем геометрию


		<div class="about">
			<div class="title about__title"></div>
			<div class="subtitle about__subtitle"></div>
		</div>

---------------

Файловая структура

Большой бэм стек - используется в яндексе, нам не нужно, очень много шаблонов, компонентов и т.д.
Малый бэм стек   - нейминг и файловая структура. Каждый блок выносят в отдельный файл или папку.


---------------